
/*A video player plays a game in which the character competes in a hurdle race. Hurdles are of varying heights, and the characters have a maximum height they can jump. There is a magic potion they can take that will increase their maximum jump height by 1 unit for each dose. How many doses of the potion must the character take to be able to jump all of the hurdles. If the character can already clear all of the hurdles, return 0.

Example

height = [1, 2, 3, 3, 2]
k = 1
The character can jump 1 unit high initially and must take 3 â€“ 1 = 2 doses of potion to be able to jump all of the hurdles.
*/








console.log(height);
    let maxCount = 0;
    for (let i = 0; i < height.length; i++) {
        if (height[i] > k) {
           let diff = height[i] - k;
            if (diff > maxCount) {
                maxCount = diff;
            }

        }
    }
    if (maxCount === 0) {
        return 0;
    }
    return maxCount;


    function hurdleRace(k, height) {
        let maxH = Math.max.apply(null, k);
        let iGotTheHops = 0;
        console.log(maxH);
      
        if (height < maxH) {
          console.log(maxH - height);
          return maxH - height;
        } else {
          console.log(0);
          return iGotTheHops;
        }
      }



      function hurdleRace2(k, height) {
        // Write your code here
      
        let maxHight = k[0];
        let iGotHops = 0;
      
        for (let i = 0; i < k.length; i++) {
          if (k[i] > maxHight) {
            maxHight = k[i];
          }
        }
      
        if (height < maxHight) {
          console.log(maxHight - height);
          return maxHight - height;
      
        } else {
          console.log(iGotHops);
          return iGotHops;
        }
      }
      
      hurdleRace([1,6,3,5,2],4)
      hurdleRace2([1,6,3,5,2],4)